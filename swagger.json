{
  "openapi": "3.0.0",
  "info": {
    "title": "Appointment Tracking App",
    "version": "1.0.0",
    "description": "API documentation for tracking different appointments of a doctor."
  },
  "servers": [
    {
      "url": "http://localhost:4000/api/v1",
      "description": "Development Server"
    }
  ],
  "components": {
    "schemas": {
      "Users": {
        "type": "object",
        "properties": {
          "sAvatar": {
            "type": "file",
            "description": "User's avatar",
            "example": "avatar.jpg"
          },
          "sFirstName": {
            "type": "string",
            "description": "User's first name",
            "minLength": 3,
            "example": "John"
          },
          "sLastName": {
            "type": "string",
            "description": "User's last name",
            "minLength": 3,
            "example": "Doe"
          },
          "sEmail": {
            "type": "string",
            "description": "User's email address",
            "format": "email",
            "example": "user@example.com"
          },
          "sPassword": {
            "type": "string",
            "description": "User's password",
            "minLength": 8,
            "maxLength": 20,
            "example": "password"
          },
          "sWhatsAppBussinessNumber": {
            "type": "string",
            "description": "User's WhatsApp business number",
            "minLength": 13,
            "maxLength": 16,
            "pattern": "^\\+(?:[0-9] ?){6,14}[0-9]$",
            "example": "+1234567890123"
          }
        },
        "required": [
          "sAvatar",
          "sFirstName",
          "sLastName",
          "sEmail",
          "sPassword",
          "sWhatsAppBussinessNumber"
        ]
      },
      "Patient": {
        "type": "object",
        "properties": {
          "sName": {
            "type": "string",
            "description": "Patient's name",
            "example": "John Doe"
          },
          "sType": {
            "type": "string",
            "description": "Patient's type",
            "minLength": 3,
            "example": "diabetic"
          },
          "sAssessment": {
            "type": "string",
            "description": "Patient's assessment",
            "minLength": 3,
            "example": "highly diabetic patient"
          },
          "sAddress": {
            "type": "string",
            "description": "Patient's address",
            "minLength": 8,
            "example": "123 St high street"
          },
          "sAddress2": {
            "type": "string",
            "description": "Second address (optional)",
            "minLength": 8,
            "example": "near globe circle,Petesburg"
          },
          "sWhatsAppNumber": {
            "type": "string",
            "description": "Patient's WhatsApp number",
            "minLength": 13,
            "maxLength": 16,
            "pattern": "^\\+(?:[0-9] ?){6,14}[0-9]$",
            "example": "+911234567890"
          },
          "sGender": {
            "type": "string",
            "description": "Patient's gender",
            "enum": ["male", "female", "others"],
            "minLength": 3,
            "example": "male"
          },
          "nAge": {
            "type": "integer",
            "description": "Patient's age",
            "minimum": 0,
            "maximum": 110,
            "example": 21
          },
          "uId": {
            "type": "string",
            "description": "User ID associated with the patient",
            "format": "uuid",
            "example": "user_id"
          }
        },
        "required": [
          "sName",
          "sType",
          "sAssessment",
          "sAddress",
          "sWhatsAppNumber",
          "sGender",
          "nAge",
          "uId"
        ]
      },
      "Appointment": {
        "type": "object",
        "properties": {
          "pId": {
            "type": "string",
            "description": "Patient ID",
            "example": "609b0b8d83e28b001fd5d50f"
          },
          "sToTreat": {
            "type": "string",
            "description": "Treatment place",
            "enum": ["Home Visit", "Clinic"],
            "default": "Home Visit"
          },
          "dFromDate": {
            "type": "string",
            "format": "date-time",
            "description": "Appointment start date",
            "example": "2024-03-01T10:00:00Z"
          },
          "dToDate": {
            "type": "string",
            "format": "date-time",
            "description": "Appointment end date",
            "example": "2024-03-01T11:00:00Z"
          },
          "dtFromTime": {
            "type": "string",
            "format": "date-time",
            "description": "Appointment start time",
            "example": "2024-03-01T10:00:00Z"
          },
          "dtToTime": {
            "type": "string",
            "format": "date-time",
            "description": "Appointment end time",
            "example": "2024-03-01T11:00:00Z"
          },
          "oRepeat": {
            "description": "Repeat options for the appointment",
            "type": "object",
            "properties": {
              "sFrequency": {
                "type": "string",
                "description": "Appointment repeat frequency",
                "enum": ["Never", "Daily", "Weekly", "Monthly", "Yearly"],
                "default": "Never"
              },
              "nEvery": {
                "type": "number",
                "description": "Appointment Every duration",
                "minimum": 1,
                "example": 1
              },
              "sRepeatDuration": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": ["sFrequency"]
          },
          "sNote": {
            "type": "string",
            "description": "Additional notes for the appointment",
            "example": "Please bring your medical records."
          }
        },
        "required": [
          "pId",
          "sToTreat",
          "dFromDate",
          "dToDate",
          "dtFromTime",
          "dtToTime"
        ]
      },
      "Code": {
        "type": "object",
        "properties": {
          "nCode": {
            "type": "number",
            "description": "Code number",
            "default": 0
          },
          "nCreatedAt": {
            "type": "number",
            "description": "Creation timestamp",
            "default": 0
          },
          "uId": {
            "type": "string",
            "description": "User ID",
            "format": "uuid"
          }
        },
        "required": ["nCode", "nCreatedAt"]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "nCharges": {
            "type": "integer",
            "description": "Number of charges",
            "minimum": 1
          },
          "sRepayment": {
            "type": "string",
            "description": "Repayment schedule",
            "default": "Daily",
            "enum": ["Daily", "Weekly", "Monthly"]
          },
          "apponintmentId": {
            "type": "string",
            "description": "ID of the appointment",
            "format": "objectID"
          }
        },
        "required": ["nCharges", "sRepayment", "apponintmentId"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "security": [
      {
        "bearerAuth": []
      }
    ]
  },
  "paths": {
    "/users/signup": {
      "post": {
        "summary": "User sign up",
        "description": "A user will create an account",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "sEmail": "user@gmail.com",
                "sPassword": "password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signed up successfully",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "data": {
                    "accessToken": "flskdjfljojlkjdj"
                  },
                  "message": "code is sent",
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid input": {
                    "value": {
                      "message": "Either email is wrong or field's are empty"
                    }
                  },
                  "User already exists": {
                    "value": {
                      "message": "User already exists with this particular email"
                    }
                  },
                  "New user data not found": {
                    "value": {
                      "message": "Can't create your account because details not found "
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Log in",
        "description": "A person can log in his account",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "sEmail": "user@gmail.com",
                "sPassword": "password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged in successfully",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "data": {
                    "accessToken": "flskdjfljojlkjdj"
                  },
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid input": {
                    "value": {
                      "message": "Either email or password is empty or invalid input in the email field"
                    }
                  },
                  "User does not exists": {
                    "value": {
                      "message": "User is not registered with this email id"
                    }
                  },
                  "Invalid Email or Password": {
                    "value": {
                      "message": "Either email or password is wrong "
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/verifycode": {
      "post": {
        "summary": "Verify code",
        "description": "User to verify the code sent to email",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "nCode": 123456
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully verified",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "data": {
                    "verified": true
                  },
                  "message": "User successfully verified",
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid Code": {
                    "value": {
                      "message": "Wrong code input"
                    }
                  },
                  "Verification Failed": {
                    "value": {
                      "message": "Either the code expired or something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/resend": {
      "post": {
        "summary": "Resend code",
        "description": "User to verify the code sent to email",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Code resent",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "data": {
                    "message": "code is sent"
                  },
                  "message": "success",
                  "success": true
                }
              }
            }
          }
        }
      }
    },
    "/users/createprofile": {
      "post": {
        "summary": "Create profile",
        "description": "A user will create his/her profile",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "sAvatar": {
                    "type": "file",
                    "description": "User's avatar",
                    "example": "avatar.jpg"
                  },
                  "sFirstName": {
                    "type": "string",
                    "description": "User's first name",
                    "minLength": 3,
                    "example": "John"
                  },
                  "sLastName": {
                    "type": "string",
                    "description": "User's last name",
                    "minLength": 3,
                    "example": "Doe"
                  },
                  "sWhatsAppBussinessNumber": {
                    "type": "string",
                    "description": "User's WhatsApp business number",
                    "minLength": 13,
                    "maxLength": 16,
                    "pattern": "^\\+(?:[0-9] ?){6,14}[0-9]$",
                    "example": "+1234567890123"
                  }
                },
                "required": [
                  "sAvatar",
                  "sFirstName",
                  "sLastName",
                  "sWhatsAppBussinessNumber"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Profile created successfully",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 201,
                  "data": {
                    "_id": "52kdlskjdf024ldk0234",
                    "sEmail": "user@gamil.com",
                    "createdAt": "2024-03-01T11:49:00.948Z",
                    "sAvatar": "https://res.cloudinary.com/dk4xlishk/image/upload/v17879479384/ikmadfja;lkg56lkj5.jpg",
                    "sFirstName": "first",
                    "sLastName": "last",
                    "sWhatsAppBussinessNumber": "+911234567890"
                  },
                  "message": "your account is successfully created",
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "examples": {
                  "Avatar file": {
                    "value": {
                      "message": "Avatar file is required"
                    }
                  },
                  "All fields are required": {
                    "value": {
                      "message": "User must enter all the details in the fields provided"
                    }
                  },
                  "Code verification": {
                    "value": {
                      "message": "verify your code(this is when the user has not verified the code | this done so that the process is not bypassed)"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Account cannot be created",
            "content": {
              "application/json": {
                "example": {
                  "Account not created": {
                    "value": {
                      "messsage": "Your account could not be created either due to internal error or you have not entered some details."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/patients/": {
      "get": {
        "summary": "Get all patients",
        "description": "To retrieve the list of patients for the current user",
        "tags": ["Patient"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                },
                "example": {
                  "statusCode": 200,
                  "data": [
                    {
                      "_id": "56lkldkf23434lkd3d",
                      "sName": "Joe Doe",
                      "sType": "diabetic",
                      "sAssessment": "Highly diabetic patient",
                      "sAddress": "123 St high street",
                      "sAddress2": "near globe circle, Petesburg",
                      "sWhatsAppNumber": "+911234567890",
                      "sGender": "male",
                      "nAge": 20,
                      "uId": "52lkjlakdfj020lkdf20",
                      "createdAt": "2024-03-01T11:49:00.948Z",
                      "updatedAt": "2024-03-01T11:49:00.948Z",
                      "__v": 0
                    }
                  ],
                  "message": "success",
                  "success": true
                }
              }
            }
          }
        }
      }
    },
    "/patients/{id}": {
      "get": {
        "summary": "Get patient by ID",
        "description": "Retrieve patient details by its ID.",
        "tags": ["Patient"],

        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Patient ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "data": [
                    {
                      "_id": "56lkldkf23434lkd3d",
                      "sName": "Joe Doe",
                      "sType": "diabetic",
                      "sAssessment": "Highly diabetic patient",
                      "sAddress": "123 St high street",
                      "sAddress2": "near globe circle, Petesburg",
                      "sWhatsAppNumber": "+911234567890",
                      "sGender": "male",
                      "nAge": 20,
                      "uId": "52lkjlakdfj020lkdf20",
                      "createdAt": "2024-03-01T11:49:00.948Z",
                      "updatedAt": "2024-03-01T11:49:00.948Z",
                      "__v": 0
                    }
                  ],
                  "message": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/patients/new": {
      "post": {
        "summary": "Create a new patient",
        "description": "Create a new patient record for the authenticated user.",
        "tags": ["Patient"],

        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "sName": "Joe Doe",
                "sType": "diabetic",
                "sAssessment": "Highly diabetic patient",
                "sAddress": "123 St high street",
                "sAddress2": "near globe circle, Petesburg",
                "sWhatsAppNumber": "+911234567890",
                "sGender": "male",
                "nAge": 20
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 201,
                  "data": [
                    {
                      "sName": "Joe Doe",
                      "sType": "diabetic",
                      "sAssessment": "Highly diabetic patient",
                      "sAddress": "123 St high street",
                      "sAddress2": "near globe circle, Petesburg",
                      "sWhatsAppNumber": "+911234567890",
                      "sGender": "male",
                      "nAge": 20,
                      "uId": "52lkjlakdfj020lkdf20",
                      "_id": "56lkldkf23434lkd3d",
                      "createdAt": "2024-03-01T11:49:00.948Z",
                      "updatedAt": "2024-03-01T11:49:00.948Z",
                      "__v": 0
                    }
                  ],
                  "message": "Appointment is successfully added",
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/patients/update/{id}": {
      "patch": {
        "summary": "Update patient by ID",
        "description": "Update patient details by its ID.",
        "tags": ["Patient"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Appointment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "sName": "Joe Doe",
                "sType": "diabetic",
                "sAssessment": "medium diabetic",
                "sAddress": "123 St high street",
                "sAddress2": "near globe circle, Petesburg",
                "sWhatsAppNumber": "+911234567890",
                "sGender": "male",
                "nAge": 21
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 201,
                  "data": [
                    {
                      "sName": "Joe Doe",
                      "sType": "diabetic",
                      "sAssessment": "medium diabetic",
                      "sAddress": "123 St high street",
                      "sAddress2": "near globe circle, Petesburg",
                      "sWhatsAppNumber": "+911234567890",
                      "sGender": "male",
                      "nAge": 21,
                      "uId": "52lkjlakdfj020lkdf20",
                      "_id": "56lkldkf23434lkd3d",
                      "createdAt": "2024-03-01T11:49:00.948Z",
                      "updatedAt": "2024-03-01T12:49:00.948Z"
                    }
                  ],
                  "message": "Patient details are updated successfully",
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/patients/delete/{id}": {
      "delete": {
        "summary": "Delete patient by ID",
        "description": "Update patient details by its ID.",
        "tags": ["Patient"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Appointment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "sName": "Joe Doe",
                "sType": "diabetic",
                "sAssessment": "medium diabetic",
                "sAddress": "123 St high street",
                "sAddress2": "near globe circle, Petesburg",
                "sWhatsAppNumber": "+911234567890",
                "sGender": "male",
                "nAge": 21
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 201,
                  "message": "Patient is deleted successfully",
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/appointment/add/{id}": {
      "post": {
        "summary": "Add appointments",
        "description": "This is the api for adding a patient's appointments",
        "tags": ["Appointment"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Appointment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "sToTreat": "Home Visit",
                "dFromDate": "2024-03-01T11:49:00.948Z",
                "dToDate": "2024-03-01T11:49:00.948Z",
                "dtFromTime": "2024-03-01T11:49:00.948Z",
                "dtToTime": "2024-03-01T11:49:00.948Z",
                "oRepeat": {
                  "sFrequency": "Weekly",
                  "nEvery": "3",
                  "sRepeatDuration": ["m", "t", "f"]
                },
                "sNote": "important note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 201,
                  "data": {
                    "pId": "52lkjlakdfj020lkdf20",
                    "sToTreat": "2024-03-01T11:49:00.948Z",
                    "dFromDate": "2024-03-01T11:49:00.948Z",
                    "dToDate": "2024-03-01T11:49:00.948Z",
                    "dtFromTime": "2024-03-01T11:49:00.948Z",
                    "dtToTime": "2024-03-01T11:49:00.948Z",
                    "oRepeat": {
                      "sFrequency": "Weekly",
                      "nEvery": "3",
                      "sRepeatDuration": ["m", "t", "f"]
                    },
                    "sNote": "important note"
                  },
                  "message": "Appointment is successfully fetched",
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/appointment/add/payment/{id}": {
      "post": {
        "summary": "Add payment for appointments",
        "description": "This is the api for adding a patient's appointments payment",
        "tags": ["Appointment"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Appointment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "nCharges": "5000",
                "sRepayment": "Weekly"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 201,
                  "data": {
                    "nCharges": "5000",
                    "sRepayment": "Weekly"
                  },
                  "message": "Patient is successfully added",
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/appointment/get/all": {
      "get": {
        "summary": "Fetch user's all appointments",
        "description": "This is the api for fetching user's appointments",
        "tags": ["Appointment"],
        "security": [
          {
            "bearerAuth": []
          }
        ],

        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "sToTreat": "Home Visit",
                "dFromDate": "2024-03-01T11:49:00.948Z",
                "dToDate": "2024-03-01T11:49:00.948Z",
                "dtFromTime": "2024-03-01T11:49:00.948Z",
                "dtToTime": "2024-03-01T11:49:00.948Z",
                "oRepeat": {
                  "sFrequency": "Weekly",
                  "nEvery": "3",
                  "sRepeatDuration": ["m", "t", "f"]
                },
                "sNote": "important note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 201,
                  "data": {
                    "sToTreat": "Home Visit",
                    "dFromDate": "2024-03-01T11:49:00.948Z",
                    "dToDate": "2024-03-01T11:49:00.948Z",
                    "dtFromTime": "2024-03-01T11:49:00.948Z",
                    "dtToTime": "2024-03-01T11:49:00.948Z",
                    "oRepeat": {
                      "sFrequency": "Weekly",
                      "nEvery": "3",
                      "sRepeatDuration": ["m", "t", "f"]
                    },
                    "sNote": "important note"
                  },
                  "message": "Appointment is successfully fetched",
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/appointment/get/{id}": {
      "get": {
        "summary": "Fetch a  single appointment",
        "description": "This is the api for fetching appointment",
        "tags": ["Appointment"],
        "security": [
          {
            "bearerAuth": []
          }
        ],

        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Appointment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "sToTreat": "Home Visit",
                "dFromDate": "2024-03-01T11:49:00.948Z",
                "dToDate": "2024-03-01T11:49:00.948Z",
                "dtFromTime": "2024-03-01T11:49:00.948Z",
                "dtToTime": "2024-03-01T11:49:00.948Z",
                "oRepeat": {
                  "sFrequency": "Weekly",
                  "nEvery": "3",
                  "sRepeatDuration": ["m", "t", "f"]
                },
                "sNote": "important note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 201,
                  "data": {
                    "sToTreat": "Home Visit",
                    "dFromDate": "2024-03-01T11:49:00.948Z",
                    "dToDate": "2024-03-01T11:49:00.948Z",
                    "dtFromTime": "2024-03-01T11:49:00.948Z",
                    "dtToTime": "2024-03-01T11:49:00.948Z",
                    "oRepeat": {
                      "sFrequency": "Weekly",
                      "nEvery": "3",
                      "sRepeatDuration": ["m", "t", "f"]
                    },
                    "sNote": "important note"
                  },
                  "message": "Appointment is successfully fetched",
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/appointment/get/patient/{id}": {
      "get": {
        "summary": "Fetch patient's all appointments",
        "description": "This is the api for fetching a patient's all appointments",
        "tags": ["Appointment"],
        "security": [
          {
            "bearerAuth": []
          }
        ],

        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Patient ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "sToTreat": "Home Visit",
                "dFromDate": "2024-03-01T11:49:00.948Z",
                "dToDate": "2024-03-01T11:49:00.948Z",
                "dtFromTime": "2024-03-01T11:49:00.948Z",
                "dtToTime": "2024-03-01T11:49:00.948Z",
                "oRepeat": {
                  "sFrequency": "Weekly",
                  "nEvery": "3",
                  "sRepeatDuration": ["m", "t", "f"]
                },
                "sNote": "important note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "data": {
                    "sToTreat": "Home Visit",
                    "dFromDate": "2024-03-01T11:49:00.948Z",
                    "dToDate": "2024-03-01T11:49:00.948Z",
                    "dtFromTime": "2024-03-01T11:49:00.948Z",
                    "dtToTime": "2024-03-01T11:49:00.948Z",
                    "oRepeat": {
                      "sFrequency": "Weekly",
                      "nEvery": "3",
                      "sRepeatDuration": ["m", "t", "f"]
                    },
                    "sNote": "important note"
                  },
                  "message": "Appointment is successfully updated",
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/appointment/delete/{id}": {
      "delete": {
        "summary": "Delete appointment",
        "description": "This is the api for deleting appointment",
        "tags": ["Appointment"],
        "security": [
          {
            "bearerAuth": []
          }
        ],

        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Appointment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "sToTreat": "Home Visit",
                "dFromDate": "2024-03-01T11:49:00.948Z",
                "dToDate": "2024-03-01T11:49:00.948Z",
                "dtFromTime": "2024-03-01T11:49:00.948Z",
                "dtToTime": "2024-03-01T11:49:00.948Z",
                "oRepeat": {
                  "sFrequency": "Weekly",
                  "nEvery": "3",
                  "sRepeatDuration": ["m", "t", "f"]
                },
                "sNote": "important note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "message": "Appointment is successfully deleted.",
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  }
}
